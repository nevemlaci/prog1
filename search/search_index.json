{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"clion/clion/","title":"CLion","text":"<p>A CLion a JetBrains \u00e1ltal fejlesztett C/C++ fejleszt\u0151k\u00f6rnyezet. Let\u00f6lteni itt lehet: https://www.jetbrains.com/clion/download</p> <p>2025 \u00f3ta ingyenes szem\u00e9lyes felhaszn\u00e1l\u00e1sra, viszont hallgat\u00f3i licensz is k\u00e9rhet\u0151 hozz\u00e1: https://www.jetbrains.com/academy/student-pack</p>"},{"location":"clion/clion/#forditoprogram-telepitese","title":"Ford\u00edt\u00f3program telep\u00edt\u00e9se","text":"<p>A CLion fejleszt\u0151k\u00f6rnyezet automatikusan telep\u00edt egy MinGW (Minimalist Gnu for Windows), ami egyes GNU eszk\u00f6z\u00f6k Windows portja.  Ez mag\u00e1ban foglalja a GCC ford\u00edt\u00f3programot, valamint a GDB nyomk\u00f6vet\u0151t (debugger) is.</p>"},{"location":"clion/clion/#kornyezet-beallitasa","title":"K\u00f6rnyezet be\u00e1ll\u00edt\u00e1sa","text":"<p>Ha let\u00f6lt\u00f6tted a programot \u00e9s bel\u00e9pt\u00e9l a JetBrains fi\u00f3koddal, akkor valami ilyesmi oldal fogad:</p> <p></p> <p>V\u00e1laszd a \"New Project\" opci\u00f3t, ezen bel\u00fcl pedig a \"C Executable\" -t. \u00c1ll\u00edtsd a standard verzi\u00f3t C11 -re, kb. ezt  tan\u00edtja a t\u00e1rgy is.</p> <p>Ok\u00e9zd le ezt az ablakot. Ezut\u00e1n a CLion felaj\u00e1nlja a k\u00fcl\u00f6nb\u00f6z\u0151 toolchain-ek konfigur\u00e1l\u00e1s\u00e1t. CLion-ban egy toolchain egy ford\u00edt\u00f3programb\u00f3l, debuggerb\u0151l \u00e9s egy gener\u00e1torb\u00f3l \u00e1ll (err\u0151l k\u00e9s\u0151bb).</p> <p></p> <p>Mint m\u00e1r eml\u00edtettem, a CLion automatikusan telep\u00edt egy toolchain-t \u00edgy neked ezzel nem kell fogalkoznod, nyomj az \"Ok\" gombra.</p>"},{"location":"clion/clion/#hello-world","title":"Hello, World!","text":"<p>A fejleszt\u0151k\u00f6rnyezet automatikusan k\u00e9sz\u00edt egy <code>main.c</code> forr\u00e1sf\u00e1jlt. Ebbe a file-ba az al\u00e1bbi k\u00f3dr\u00e9szletet m\u00e1sold be:</p> <pre><code>#include &lt;stdio.h&gt;\n\nint main(void){\n    printf(\"Hello, World!\");\n\n    return 0;\n}\n</code></pre> <p>A jobb fels\u0151 sarokban l\u00e9v\u0151 kis z\u00f6ld h\u00e1romsz\u00f6gre kattintva ind\u00edtsd el a programot.</p>"},{"location":"clion/clion/#cmake","title":"CMake","text":"<p>Tal\u00e1n \u00e9szrevehetted, hogy a projektedben megjelent egy <code>CMakeLists.txt</code> nev\u0171 file is.</p> <p>A CLion a CMake nev\u0171 build system -et haszn\u00e1lja.</p>"},{"location":"clion/clion/#cmake-mukodese-roviden","title":"CMake m\u0171k\u00f6d\u00e9se r\u00f6viden","text":"<p>A projekt \"config\" fileja a <code>CMakeLists.txt</code>. Ez a \"script\" \u00edrja le azt, hogy a projektben tal\u00e1lhat\u00f3 forr\u00e1sf\u00e1jlokb\u00f3l v\u00e9g\u00fcl hogyan lesz haszn\u00e1lhat\u00f3 program. A CMake egy deklarat\u00edv nyelv. Nem kell megmondani, hogy hogyan csin\u00e1lja azt, amit csin\u00e1l, csak azt kell megmondani, hogy mit csin\u00e1ljon.</p> <p>A CMake \u00f6nmag\u00e1ban nem build-system. A CMakeList alapj\u00e1n egy gener\u00e1tor-nak nevezett, t\u00e9nyleges build system -hez (pl. Make, Visual Studio, Ninja) gener\u00e1l projekt fileokat. A Ninja egy t\u00f6k\u00e9letes v\u00e1laszt\u00e1s, kicsi \u00e9s gyors. Elvileg a CLion automatikusan telep\u00edti.</p> <p>Ezut\u00e1n a gener\u00e1tor build system (Ninja) a gener\u00e1lt config alapj\u00e1n lefuttatja a ford\u00edt\u00f3programot, amely el\u0151\u00e1ll\u00edtja a v\u00e9gs\u0151 bin\u00e1ris filet, ami m\u00e1r futtathat\u00f3.</p> <p></p>"},{"location":"clion/clion/#alapertelmezett-cmakeliststxt-ertelmezese","title":"Alap\u00e9rtelmezett CMakeLists.txt \u00e9rtelmez\u00e9se","text":"<pre><code>cmake_minimum_required(VERSION 3.31)\nproject(stuff C)\n\nset(CMAKE_C_STANDARD 11)\n\nadd_executable(stuff main.c)\n</code></pre> <ul> <li><code>cmake_minimum_required(VERSION 3.31)</code>: ez a sor csak az\u00e9rt van itt, mert k\u00f6telez\u0151. A minimum CMake verzi\u00f3t adja meg, amivel a projekt kompatibilis. \u00c9n a <code>3.25</code> -\u00f6s verzi\u00f3t szoktam haszn\u00e1lni, mivel n\u00e9h\u00e1ny Linux distro m\u00e9g mindig ezt haszn\u00e1lja alap\u00e9rtelmezettk\u00e9nt...</li> <li><code>project(stuff C)</code>: a <code>project</code> deklar\u00e1lja a projekt nev\u00e9t (ez esetben \"stuff\"), a <code>C</code> pedig a projekt \u00e1tlal haszn\u00e1lt nyelvet (nyelveket) adja meg.\u00cdgy is \u00edrhat\u00f3: <code>project(stuff LANGUAGES C)</code></li> <li><code>set(CMAKE_C_STANDARD 11)</code>: megadja a projekt \u00e1ltal haszn\u00e1lt C standard verzi\u00f3t. (C99, C11, C23, stb.)</li> <li><code>add_executable(stuff main.c)</code>: deklar\u00e1l egy futtathat\u00f3 (executable) CMake target -et \u00e9s forr\u00e1sf\u00e1jlk\u00e9nt hozz\u00e1adja a <code>main.c</code> nev\u0171 filet.</li> </ul>"},{"location":"clion/clion/#cmake-target","title":"CMake target","text":"<p>CMake-ben egy target lehet executable, library, stb.  Ezek azok az entit\u00e1sok, amikb\u0151l k\u00e9s\u0151bb futtathat\u00f3 (vagy csatolhat\u00f3) k\u00f3d k\u00e9pz\u0151dik.</p>"},{"location":"clion/clion/#tobb-fileos-projektek","title":"T\u00f6bb fileos projektek","text":"<p>Warning</p> <p>A t\u00f6bb forr\u00e1sfileb\u00f3l \u00e1ll\u00f3 projektek a tananyagban ugyan k\u00e9s\u0151bb szerepelnek, viszont a h\u00e1ziban k\u00f6vetelm\u00e9ny \u00edgy dolgozni!</p> <p>Jobb klikkelj a projekt mapp\u00e1j\u00e1ra:</p> <p></p> <p>Majd v\u00e1laszd a <code>New&gt;C/C++ Source file</code> opci\u00f3t!</p> <p></p> <p>A k\u00f6vetkez\u0151 felugr\u00f3 ablakban megadhatunk n\u00e9h\u00e1ny dolgot:</p> <ul> <li>Name: a file neve. A f\u00e1jlkiterjeszt\u00e9st (pl .c) nem kell megadni</li> <li>Type: a file t\u00edpusa. Itt most a <code>.c</code> kell.</li> <li>Create associated header: Ha ez ki van pip\u00e1lva, akkor l\u00e9trej\u00f6n egy ugyanilyen nev\u0171 header file is.    Sokszor header-source p\u00e1rokat csin\u00e1lunk, ez\u00e9rt ez egy gyakran haszn\u00e1lt kapcsol\u00f3 lesz.</li> <li>Add to targets: A kiv\u00e1lasztott CMake target-ekhez automatikusan hozz\u00e1adja az \u00faj forr\u00e1sf\u00e1jlokat.</li> </ul> <p>Csin\u00e1lj egy <code>foo.h</code> - <code>foo.c</code> file p\u00e1rt!</p> <p></p> <p>A projekt f\u00e1jlstrukt\u00far\u00e1ban megjelentek a <code>foo.h</code> \u00e9s <code>foo.c</code> f\u00e1jlok, valamint a <code>CMakeLists.txt</code> -ben is hozz\u00e1 lett adva a k\u00e9t \u00faj file.</p> <p>\u00cdrd \u00e1t \u00fagy a programot, hogy a <code>foo.h</code> deklar\u00e1l egy <code>helloWorld</code> f\u00fcggv\u00e9nyt, a <code>foo.c</code> defini\u00e1lja ezt \u00fagy, hogy a f\u00fcggv\u00e9ny a <code>Hello, World!</code> sz\u00f6veget \u00edrja a konzolra, a <code>main.c</code> pedig megh\u00edvja ezt a <code>helloWorld</code> f\u00fcggv\u00e9nyt!</p> <pre><code>//foo.h\n\n#ifndef FOO_H\n#define FOO_H\n\nvoid helloWorld(void);\n\n#endif\n</code></pre> <pre><code>//foo.c\n\n#include \"foo.h\"\n#include &lt;stdio.h&gt;\n\nvoid helloWorld(void) {\n    printf(\"Hello, World!\\n\");\n}\n</code></pre> <pre><code>//main.c\n\n#include \"foo.h\"\n\nint main(void) {\n    helloWorld();\n    return 0;\n}\n</code></pre> <p>A CMakeList -ben automatikusan \u00faj k\u00f3d gener\u00e1lodott:</p> <pre><code>add_executable(stuff main.c foo.c foo.h)\n</code></pre> <p>A programhoz mostm\u00e1r 3 file tartozik, ezek k\u00f3dja alkotja majd a v\u00e9gs\u0151 programot.</p> <p>Note</p> <p>A CMake okos \u00e9s tudja, hogy a header fileokat nem ford\u00edtjuk le \u00f6nmagukban,  ez\u00e9rt ezeket egy\u00e9bk\u00e9nt ki fogja venni a v\u00e9gleges build-b\u0151l, viszont a fejleszt\u0151k\u00f6rnyezet csak \u00fagy fog helyesen m\u0171k\u00f6dni,  ha a header fileok is hozz\u00e1 vannak adva a targethez.</p> <p>Note</p> <p>Pr\u00f3b\u00e1ld ki mi t\u00f6rt\u00e9nik akkor, ha kiveszed a <code>foo.c</code> f\u00e1jlt a targetb\u0151l! A k\u00f3d ugyan lefordul, de a linker nem tal\u00e1l defin\u00edci\u00f3t a <code>helloWorld</code> f\u00fcggv\u00e9nyhet (Undefined Reference error). Ha ilyen hib\u00e1t tapasztalsz, bizonyosodj meg arr\u00f3l, hogy az executable-hez hozz\u00e1adtad az \u00faj forr\u00e1sf\u00e1jlokat!</p>"},{"location":"sdl/sdl-cmake/","title":"SDL2 telep\u00edt\u00e9se CMake build system k\u00f6rnyezetben","text":"<p>Kezd\u0151 <code>CMakeLists.txt</code>: <pre><code>cmake_minimum_required(VERSION 3.31)\nproject(prog1_sdl2 C)\n\nset(CMAKE_C_STANDARD 11)\n\nadd_executable(prog1_sdl2 main.c)\n</code></pre></p>"},{"location":"sdl/sdl-cmake/#sdl2-csomagok-letoltese","title":"SDL2 csomagok let\u00f6lt\u00e9se","text":""},{"location":"sdl/sdl-cmake/#mingw-fordito-eseten","title":"MinGW ford\u00edt\u00f3 eset\u00e9n","text":"<ul> <li>https://github.com/libsdl-org/SDL/releases/download/release-2.32.10/SDL2-devel-2.32.10-mingw.zip</li> <li>https://github.com/libsdl-org/SDL_image/releases/download/release-2.8.8/SDL2_image-devel-2.8.8-mingw.zip</li> <li>https://github.com/libsdl-org/SDL_ttf/releases/download/release-2.24.0/SDL2_ttf-devel-2.24.0-mingw.zip</li> </ul>"},{"location":"sdl/sdl-cmake/#msvc-visual-studio-fordito-eseten","title":"MSVC (Visual Studio ford\u00edt\u00f3) eset\u00e9n","text":"<ul> <li>https://github.com/libsdl-org/SDL/releases/download/release-2.32.10/SDL2-devel-2.32.10-VC.zip</li> <li>https://github.com/libsdl-org/SDL_image/releases/download/release-2.8.8/SDL2_image-devel-2.8.8-VC.zip</li> <li>https://github.com/libsdl-org/SDL_ttf/releases/download/release-2.24.0/SDL2_ttf-devel-2.24.0-VC.zip</li> </ul>"},{"location":"sdl/sdl-cmake/#unix-alapu-rendszerek","title":"Unix alap\u00fa rendszerek","text":"<p>Unix alap\u00fa rendszereken a telep\u00edt\u00e9st legegyszer\u0171bben a rendszer package manager\u00e9b\u0151l lehet v\u00e9grehajtani.</p> <p>APT: <pre><code>sudo apt update\nsudo apt install libsdl2-dev libsdl2-image-dev libsdl2-ttf-dev\n</code></pre></p> <p>Pacman: <pre><code>sudo pacman -S sdl2 sdl2_image sdl2_ttf\n</code></pre></p>"},{"location":"sdl/sdl-cmake/#kicsomagolas-mappastruktura","title":"Kicsomagol\u00e1s, mappastrukt\u00fara","text":"<p>Note</p> <p>Csak Windows oper\u00e1ci\u00f3s rendszeren sz\u00fcks\u00e9ges</p> <p>K\u00e9sz\u00edts a projekt gy\u00f6k\u00e9rmapp\u00e1j\u00e1ban egy <code>external_dependencies</code> nev\u0171 almapp\u00e1t!  Ebbe az almapp\u00e1ba csomagold ki a h\u00e1rom let\u00f6lt\u00f6tt t\u00f6m\u00f6r\u00edtett \u00e1llom\u00e1nyt!</p> <p>A mappastrukt\u00fara valahogy \u00edgy kell kin\u00e9zzen: <pre><code>CMakeLists.txt\nexternal_dependencies\n|-SDL2-verzi\u00f3\n|-SDL2_image-verzi\u00f3\n|-SDL2_TTF-verzi\u00f3\n...\n</code></pre></p>"},{"location":"sdl/sdl-cmake/#path-cmake-valtozo-beallitasa","title":"PATH CMake v\u00e1ltoz\u00f3 be\u00e1ll\u00edt\u00e1sa","text":"<p>Note</p> <p>Csak Windows oper\u00e1ci\u00f3s rendszeren sz\u00fcks\u00e9ges</p> <p>A CMake a <code>CMAKE_PREFIX_PATH</code> v\u00e1ltoz\u00f3ban kapott k\u00f6nyvt\u00e1rakban keresi el\u0151sz\u00f6r a f\u00fcgg\u0151s\u00e9geket.</p> <p>Adjuk hozz\u00e1 ehhez a list\u00e1hoz az el\u0151bb l\u00e9trehozott k\u00f6nyvt\u00e1rat! Ehhez a <code>CMakeLists.txt</code> f\u00e1jlhoz, valahol a <code>projekt</code> deklar\u00e1ci\u00f3 ut\u00e1n, hozz\u00e1 kell adni egy sort:</p> <pre><code>list(APPEND CMAKE_PREFIX_PATH external_dependencies)\n</code></pre>"},{"location":"sdl/sdl-cmake/#sdl-megkeresese","title":"SDL megkeres\u00e9se","text":"<p>Az SDL be\u00e9p\u00edtett CMake t\u00e1mogat\u00e1ssal \u00e9rkezik. A CMake <code>find_package</code> f\u00fcggv\u00e9ny\u00e9t fogjuk haszn\u00e1lni.</p> <p>Adjuk hozz\u00e1 ezt a h\u00e1rom sort a <code>CMakeLists.txt</code>-hez, a <code>list(append) ...</code> sor ut\u00e1n!</p> <pre><code>find_package(SDL2 REQUIRED)\nfind_package(SDL2_image REQUIRED)\nfind_package(SDL2_ttf REQUIRED)\n</code></pre>"},{"location":"sdl/sdl-cmake/#sdl_gfx-konyvtar-hozzaadasa","title":"SDL_GFX k\u00f6nyvt\u00e1r hozz\u00e1ad\u00e1sa","text":"<p>Az SDL_GFX k\u00f6nyvt\u00e1rat a t\u00f6bbi SDL modullal ellent\u00e9tben forr\u00e1sk\u00f3dk\u00e9nt a legegyszer\u0171bb a projekthez adni.</p> <p>A https://github.com/nevemlaci/SDL2_gfx weboldalon a Code gombra kattintva ZIP-k\u00e9nt t\u00f6ltsd le a f\u00e1jlokat! Ezut\u00e1n az <code>external_dependencies</code> k\u00f6nyvt\u00e1rba csomagold ki \u00e9s nevezd \u00e1t <code>SDL2_GFX</code>-re a kicsomagolt k\u00f6nyvt\u00e1rat!</p> <p>A k\u00f6vetkez\u0151 sort add hozz\u00e1 a <code>CMakeLists.txt</code>-hez: <pre><code>add_subdirectory(external_dependencies/SDL2_GFX)\n</code></pre></p> <p>!!! note <code>add_subdirectory</code>     Ez a f\u00fcggv\u00e9ny bevon egy alk\u00f6nyvt\u00e1rat a buildbe. Ha belen\u00e9zel az <code>SDL2_GFX</code> k\u00f6nyvt\u00e1rban, ott is tal\u00e1lsz egy     <code>CMakeLists.txt</code> f\u00e1jlt, ami a f\u00fcggv\u00e9nyk\u00f6nyvt\u00e1r CMake targetjeit defini\u00e1lja. </p>"},{"location":"sdl/sdl-cmake/#sdl-konyvtar-csatolasa","title":"SDL k\u00f6nyvt\u00e1r csatol\u00e1sa","text":"<p>Ahhoz, hogy az SDL k\u00f6nyvt\u00e1rat haszn\u00e1lni tudjuk, csatolni (linkelni) kell azt az alkalmaz\u00e1sunkhoz.  Szerencs\u00e9re CMake -ben ez is egy sor.</p> <p><code>CMakeLists.txt</code>: <pre><code>cmake_minimum_required(VERSION 3.31)\nproject(prog1_sdl2 C)\nset(CMAKE_C_STANDARD 11)\n\nlist(APPEND CMAKE_PREFIX_PATH external_dependencies)\n\nfind_package(SDL2 REQUIRED)\nfind_package(SDL2_image REQUIRED)\nfind_package(SDL2_ttf REQUIRED)\n\nadd_subdirectory(external_dependencies/SDL2_GFX)\n\n\nadd_executable(prog1_sdl2 main.c)\n\ntarget_link_libraries(\n        prog1_sdl2\n        PRIVATE SDL2::SDL2main\n        PRIVATE SDL2::SDL2\n        PRIVATE SDL2_image::SDL2_image\n        PRIVATE SDL2_ttf::SDL2_ttf\n        PRIVATE sdl2_gfx_static\n)\n</code></pre></p>"},{"location":"sdl/sdl-cmake/#windows-es-dll-problema","title":"Windows \u00e9s DLL probl\u00e9ma","text":"<p>Windowson sz\u00fcks\u00e9g van a DLL-ek executable mell\u00e9 m\u00e1sol\u00e1s\u00e1ra. Ezen probl\u00e1m\u00e1t oldjuk most meg.</p> <p>K\u00e9sz\u00edts a projekt gy\u00f6k\u00e9rmapp\u00e1j\u00e1ba egy <code>cmake</code> nev\u0171 k\u00f6nyvt\u00e1rat, majd hozz benne l\u00e9tre egy <code>copy_dlls.cmake</code>  nev\u0171 f\u00e1jlt!</p> <p>A f\u00e1jl tartalma legyen az al\u00e1bbi: <pre><code>function(copy_depend_dlls target_name)\n    if(WIN32)\n        add_custom_command(TARGET ${target_name} POST_BUILD\n                COMMAND ${CMAKE_COMMAND} -E copy -t $&lt;TARGET_FILE_DIR:${target_name}&gt; $&lt;TARGET_RUNTIME_DLLS:${target_name}&gt;\n                COMMAND_EXPAND_LISTS\n        )\n    endif (WIN32)\nendfunction()\n</code></pre></p> <p>A <code>CMakeLists.txt</code> file v\u00e9g\u00e9re (az SDL2 csatol\u00e1sa ut\u00e1n) pedig az al\u00e1bbi k\u00e9t sort illeszd be: <pre><code>include(cmake/copy_dlls.cmake)\ncopy_depend_dlls(prog1_sdl2)\n</code></pre></p> <p>Warning</p> <p>A <code>copy_depend_dlls</code> f\u00fcggv\u00e9ny az executable target nev\u00e9t v\u00e1rja el (az els\u0151 param\u00e9ter, amit az <code>add_executable</code> f\u00fcggv\u00e9ny kap). Ha ez nem egyezik a p\u00e9ld\u00e1ban haszn\u00e1lttal, akkor term\u00e9szetesen a saj\u00e1t nevet add meg!</p>"},{"location":"sdl/sdl-cmake/#sdl2-bootstrap","title":"SDL2 Bootstrap","text":"<p>Az \u00fatmutat\u00f3ban elk\u00e9sz\u00edtett projekt  err\u0151l a linkr\u0151l: https://github.com/nevemlaci/Prog1_SDL2 let\u00f6lthet\u0151.</p> <p>A projekt egy bootstrap Python scriptet tartalmaz, amely let\u00f6lti a sz\u00fcks\u00e9ges f\u00fcgg\u0151s\u00e9geket.</p> <p>A haszn\u00e1lat el\u00e9g egyszer\u0171, a megfelel\u0151 script file-t kell futtatni:</p> <ul> <li><code>mingw.bat</code>: MinGW toolchain eset\u00e9n</li> <li><code>msvc.bat</code>: MSVC ford\u00edt\u00f3 eset\u00e9n</li> <li><code>unix.sh</code>: Unix (Linux/MacOS) eset\u00e9n</li> </ul> <p>Note</p> <p>A script futtat\u00e1s\u00e1hoz, ha m\u00e9g nincs telep\u00edtve, a Python3 telep\u00edt\u00e9se sz\u00fcks\u00e9ges. Ez Windowson a <code>python3</code> parancs kiad\u00e1sa ut\u00e1n a Microsoft Storeb\u00f3l lehets\u00e9ges. Unix alap\u00fa rendszereken a <code>python3</code> csomagot kell telep\u00edteni a package managerb\u0151l.</p> <p>Note</p> <p>Miel\u0151tt a script futtat\u00e1sa enged\u00e9lyezve lenne, ki kell adni a k\u00f6vetkez\u0151 parancsot: <pre><code>chmod a+x unix.bash\n</code></pre></p>"}]}